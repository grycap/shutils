#!/bin/bash
# The MIT License (MIT)
# 
# Copyright (c) 2015 GRyCAP
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
function usage {
    echo "* Runs the commands in the set of hosts defined in the HOSTS variable declared in the /etc/runall/hosts file"
    echo 
    echo -e "\tusage: $0 [ -v ] [ -p ] [ -l ] -- <commands>"
    echo -e "\t-v\tverbose mode"
    echo -e "\t-p\trun in parallel (does not wait for output)"
    echo -e "\t-l\trun the command in localhost"
    echo -e "\t-h\tshows this help and exits"
    echo -e "\t-i\texpects input from the commandline (this flag is overriden if a command is present)"
}
if [ ! -e /etc/runall/hosts ]; then
    echo "check that the file /etc/runall/hosts exists and sets the HOSTS variable"
    exit -1
fi
source /etc/runall/hosts
if [ "$HOSTS" == "" ]; then
    echo "check that the file /etc/runall/hosts exists and sets the HOSTS variable"
    exit -1
fi

COMMAND=
LOCAL=0
VERBOSE=0
PARALLEL=0
STDIN=0
while [ $# -gt 0 ]; do
	case $1 in
		-h)	usage
                        exit 0;;
		-v)	VERBOSE=1;;
		-p)	PARALLEL=1;;
                -i)     STDIN=1;;
		--)
			shift
			COMMAND=$@
			shift $#
			;;
		-l|--localhost)
			LOCAL=1
			;;
		*)
			echo "error: parameter not expected"
			exit;;
	esac
	shift
done

if [ "$COMMAND" = "" ] && [ $STDIN -eq 1 ]; then
    echo "Type a set of command and hit CTRL-D to issue them in the hosts"
    COMMAND=$(cat)
fi


if [ "$COMMAND" = "" ]; then
	echo "no command provided";
	exit
fi

LOCALHOST=$(hostname)

echo "executing $COMMAND in $HOSTS"

for h in $HOSTS; do
	if [ $PARALLEL == 1 ]; then
		FILE=/tmp/myrunall-poutput-$(date +%Y%m%d%H%M%S)
		[ $VERBOSE == 1 ] && echo "ssh $h ($COMMAND) &> $FILE"
		ssh $h "(${COMMAND}) &> $FILE" & disown
	else
		[ $VERBOSE == 1 ] && echo ssh $h $COMMAND
                ssh $h bash -s <<EOF101010
export LANG=C
export LC_ALL=C
$COMMAND
EOF101010
	fi
done
if [ $LOCAL == 1 ]; then
	[ $VERBOSE == 1 ] && echo ssh $LOCALHOST $COMMAND
        ssh $LOCALHOST bash -s <<EOF101010
export LANG=C
export LC_ALL=C
$COMMAND
EOF101010
fi
