#!/bin/bash
# The MIT License (MIT)
# 
# Copyright (c) 2015 GRyCAP
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

EXEC_ID=$(id -u)_$(basename $1)
CACHEFILE=/tmp/cachefile_$EXEC_ID
VARFILE=/tmp/runcachefile_$EXEC_ID
COMMAND=$@
VALID_SECONDS=300

function l_tempfile {
        RES=$(tempfile 2> /dev/null)
        if [ $? -ne 0 ]; then
                RES=$(mktemp 2> /dev/null)
                if [ $? -ne 0 ]; then
                        RES=/tmp/ftemp_${RANDOM}_$(date +%s)
                        touch $RES
                fi
        fi
        echo $RES
}

function realmonitor() {
	TMPFILE=$(l_tempfile)
	date +%s > $TMPFILE
	$COMMAND >> $TMPFILE
	RETVAL=$?
	if [ $RETVAL -eq 0 ]; then
		mv $TMPFILE $CACHEFILE
		rm -f $TMPFILE
	fi
	return $RETVAL
}

function iscachevalid() {
	if [ ! -e $CACHEFILE ]; then
		return -1
	fi
	
	TIMESTAMP_CACHE=$(head -n +1 $CACHEFILE)
	TIMESTAMP=$(date +%s)
	ELAPSED=$((TIMESTAMP - TIMESTAMP_CACHE))
	if [ $? -ne 0 ]; then
		return -1
	fi
	if [ $ELAPSED -lt $VALID_SECONDS ]; then
		return 0
	fi
	return 1
}

RETVAL=0
iscachevalid
if [ $? -ne 0 ]; then
        if [ ! -e $VARFILE ]; then
            touch $VARFILE
            realmonitor
            RETVAL=$?
            rm $VARFILE
        fi
fi

# In case that the command is updating, we will try to dump the current values in the cache
if [ $RETVAL -eq 0 ]; then
	[ -e $CACHEFILE ] && tail -n +2 $CACHEFILE
fi
